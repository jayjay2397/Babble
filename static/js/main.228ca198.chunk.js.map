{"version":3,"sources":["ApolloProvider.js","pages/Home.js","pages/Login.js","video/bg1.mp4","pages/Register.js","App.js","index.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","ApolloProvider","props","Home","Login","REGISTER_USER","gql","Register","useState","email","username","password","confirmPassword","variables","setVariables","errors","setErrors","useMutation","update","_","__","history","push","onError","err","graphQLErrors","extensions","exception","registerUser","loading","Row","className","Col","sm","md","lg","Form","onSubmit","e","preventDefault","Group","Label","Control","type","value","onChange","target","Button","variant","disabled","id","autoPlay","muted","loop","src","BG1","App","Container","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAGMA,EAAS,IAAIC,eAAa,CAC9BC,IAAK,yBACLC,MAAO,IAAIC,kBAGE,SAASC,EAAeC,GACnC,OAAO,cAAC,iBAAD,aAAUN,OAAUA,GAAYM,I,MCP5B,SAASC,IACpB,OACI,8BACI,6CCHG,SAASC,IACpB,OACI,8BACI,8C,sDCLG,MAA0B,gCCKnCC,EAAgBC,cAAH,0WAoBJ,SAASC,EAASL,GAAQ,IAAD,EAEJM,mBAAS,CACzCC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,gBAAiB,KANmB,mBAE/BC,EAF+B,KAEpBC,EAFoB,OAQVN,mBAAS,IARC,mBAQ/BO,EAR+B,KAQvBC,EARuB,OAUFC,sBAAYZ,EAAe,CAC7Da,OAAQ,SAACC,EAAGC,GAAJ,OAAWlB,EAAMmB,QAAQC,KAAK,WACtCC,QAAS,SAACC,GAAD,OAASR,EAAUQ,GAAKA,EAAIC,cAAc,GAAGD,EAAIC,cAAc,GAAGC,WAAWC,UAAUZ,OAAO,OAZnE,mBAU/Ba,EAV+B,KAUfC,EAVe,KAUfA,QAYvB,OACE,eAACC,EAAA,EAAD,CAAKC,UAAU,uCAAf,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,UACE,oBAAIJ,UAAU,cAAd,uBACA,eAACK,EAAA,EAAD,CAAMC,SAXmB,SAACC,GAC9BA,EAAEC,iBAGFX,EAAa,CAAEf,eAOX,UACE,eAACuB,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,CAAYV,UAAWhB,EAAON,OAAS,cAAvC,SAAuDM,EAAON,OAAS,kBACvE,cAAC2B,EAAA,EAAKM,QAAN,CACEC,KAAK,QACLC,MAAO/B,EAAUJ,MACjBsB,UAAWhB,EAAON,OAAS,aAC3BoC,SAAU,SAAAP,GAAC,OAAIxB,EAAa,2BAAKD,GAAN,IAAiBJ,MAAO6B,EAAEQ,OAAOF,eAEhE,eAACR,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,CAAYV,UAAWhB,EAAOL,UAAY,cAA1C,SAA0DK,EAAON,OAAS,aAC1E,cAAC2B,EAAA,EAAKM,QAAN,CACEC,KAAK,OACLC,MAAO/B,EAAUH,SACjBqB,UAAWhB,EAAOL,UAAY,aAC9BmC,SAAU,SAAAP,GAAC,OAAIxB,EAAa,2BAAKD,GAAN,IAAiBH,SAAU4B,EAAEQ,OAAOF,eAEnE,eAACR,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,CAAYV,UAAWhB,EAAOJ,UAAY,cAA1C,SAA0DI,EAAON,OAAS,aAC1E,cAAC2B,EAAA,EAAKM,QAAN,CACEC,KAAK,WACLC,MAAO/B,EAAUF,SACjBoB,UAAWhB,EAAOJ,UAAY,aAC9BkC,SAAU,SAAAP,GAAC,OAAIxB,EAAa,2BAAKD,GAAN,IAAiBF,SAAU2B,EAAEQ,OAAOF,eAEnE,eAACR,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,CAAYV,UAAWhB,EAAOJ,UAAY,cAA1C,SAA0DI,EAAON,OAAS,aAC1E,cAAC2B,EAAA,EAAKM,QAAN,CACEC,KAAK,WACLC,MAAO/B,EAAUD,gBACjBmB,UAAWhB,EAAOH,iBAAmB,aACrCiC,SAAU,SAAAP,GAAC,OAAIxB,EAAa,2BAAKD,GAAN,IAAiBD,gBAAiB0B,EAAEQ,OAAOF,eAE1E,qBAAKb,UAAU,cAAf,SACE,cAACgB,EAAA,EAAD,CAAQC,QAAQ,UAAUL,KAAK,SAASM,SAAUpB,EAAlD,SACGA,EAAU,YAAc,qBAKjC,wBACEqB,GAAG,QAAQC,UAAQ,EAACC,OAAK,EAACC,MAAI,EADhC,cACkC,wBAAQC,IAAKC,EAAKZ,KAAK,oBC7DhDa,MAhBf,WACE,OACE,cAACvD,EAAD,UACA,cAAC,IAAD,UACA,cAACwD,EAAA,EAAD,CAAW1B,UAAW,OAAtB,SACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAO2B,KAAK,YAAYC,UAAWpD,IACnC,cAAC,IAAD,CAAOqD,OAAK,EAACF,KAAK,IAAIC,UAAWxD,IACjC,cAAC,IAAD,CAAOuD,KAAK,SAASC,UAAWvD,cCnBtCyD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.228ca198.chunk.js","sourcesContent":["import React from 'react'\nimport { ApolloClient, InMemoryCache, ApolloProvider as Provider } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://localhost:4000',\n  cache: new InMemoryCache()\n});\n\nexport default function ApolloProvider(props){\n    return <Provider client = {client} {...props}/>\n} ","import React from 'react'\n\nexport default function Home() {\n    return (\n        <div>\n            <h1>home page</h1>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Login() {\n    return (\n        <div>\n            <h1>Login page</h1>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/bg1.ca568167.mp4\";","import React, { useState } from 'react'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport BG1 from '../video/bg1.mp4';\nimport { gql, useMutation } from '@apollo/client';\n\nconst REGISTER_USER = gql`\n  mutation register(\n    $username: String! \n    $email: String! \n    $password: String! \n    $confirmPassword: String!) \n  {\n    register(\n      username: $username \n      email: $email \n      password: $password \n      confirmPassword: $confirmPassword\n    ){\n      username \n      email \n      createdAt\n    }\n  }\n`\n\nexport default function Register(props) {\n\n  const [variables, setVariables] = useState({\n    email: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n  })\n  const [errors, setErrors] = useState({})\n\n  const [registerUser, { loading }] = useMutation(REGISTER_USER, {\n    update: (_, __) => props.history.push('/login'),\n    onError: (err) => setErrors(err&&err.graphQLErrors[0]?err.graphQLErrors[0].extensions.exception.errors:{}),\n  })\n\n  const submitRegistrationForm = (e) => {\n    e.preventDefault()\n\n\n    registerUser({ variables })\n  }\n\n  return (\n    <Row className=\"bg-white py-5 justify-content-center\">\n      <Col sm={8} md={6} lg={4}>\n        <h1 className=\"text-center\"> Register</h1>\n        <Form onSubmit={submitRegistrationForm}>\n          <Form.Group>\n            <Form.Label className={errors.email && 'text-danger'}>{errors.email && 'Email address'}</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={variables.email}\n              className={errors.email && 'is-invalid'}\n              onChange={e => setVariables({ ...variables, email: e.target.value })} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className={errors.username && 'text-danger'}>{errors.email && 'Username'}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={variables.username}\n              className={errors.username && 'is-invalid'}\n              onChange={e => setVariables({ ...variables, username: e.target.value })} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className={errors.password && 'text-danger'}>{errors.email && 'Password'}</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={variables.password}\n              className={errors.password && 'is-invalid'}\n              onChange={e => setVariables({ ...variables, password: e.target.value })} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className={errors.password && 'text-danger'}>{errors.email && 'Password'}</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={variables.confirmPassword}\n              className={errors.confirmPassword && 'is-invalid'}\n              onChange={e => setVariables({ ...variables, confirmPassword: e.target.value })} />\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button variant=\"success\" type=\"submit\" disabled={loading}>\n              {loading ? 'Loading..' : 'Register'}\n            </Button>\n          </div>\n        </Form>\n      </Col>\n      <video\n        id=\"VidBG\" autoPlay muted loop> <source src={BG1} type=\"video/mp4\" />\n      </video>\n    </Row>\n\n  )\n}\n","import React from 'react';\nimport {Container } from 'react-bootstrap'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport ApolloProvider from './ApolloProvider'\n\n\nimport './App.scss';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register'\n\n\n\nfunction App() {\n  return (\n    <ApolloProvider>\n    <BrowserRouter>\n    <Container className= \"pt-5\">\n      <Switch>\n      <Route path=\"/register\" component={Register}/>\n      <Route exact path=\"/\" component={Home}/>\n      <Route path=\"/login\" component={Login}/>\n      </Switch>\n    </Container>\n    </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}